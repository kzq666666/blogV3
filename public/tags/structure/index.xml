<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>structure on KiWaTo</title>
    <link>https://kangzhiqing.com/tags/structure/</link>
    <description>Recent content in structure on KiWaTo</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 26 Dec 2018 09:20:11 +0800</lastBuildDate><atom:link href="https://kangzhiqing.com/tags/structure/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>数据结构</title>
      <link>https://kangzhiqing.com/post/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/</link>
      <pubDate>Wed, 26 Dec 2018 09:20:11 +0800</pubDate>
      
      <guid>https://kangzhiqing.com/post/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/</guid>
      <description>感谢邱老师这一个学期的数据结构课的教导，让我了解到什么是数据结构和其重要性，以及相关的算法和实现。 这是一篇关于数据结构的复习。
基本概念 1.程序 = 算法 + 数据结构 &amp;mdash;&amp;mdash; Nicklaus Wirth 一个程序就是通过具体的某种计算机语言将算法进行实现
2.数据结构：相互之间存在一种或多种特定关系的数据元素的集合 具体什么是数据结构，包含下面三个部分=&amp;gt;
  逻辑关系：线性关系、非线性关系
  存储方式：顺序存储、链接存储、散列存储 （存储存的除了要存数据，还要存它们之间的关系，这一点是邱老师在刚上数据结构讲这些基本概念的时候特别强调的，我印象挺深的）
  运算集合：查找和排序（插入=&amp;gt;直接法，二分法、交换=&amp;gt;冒泡排序，快速排序、选择=&amp;gt;堆排序）
3.算法：对特定问题求解步骤的一种描述。 一个算法还具有下列 5 个重要特性
  有穷性 一个算法必须在执行有穷步之后结束，但一个程序则可以无穷，比如说无限死循环
  确定性 算法的每一条指令必须有确切的含义
  可行性 一个算法是能行的
  输入 一个算法有零个或多个输入
  输出 一个算法有一个或多个输出
  
一个好的算法需要达到的目标
  正确性
  可读性
  健壮性 当输入数据非法时，算法也能做出反应或进行处理，即要可以处理一些特殊和极端情况
  效率和低存储量需求 时间复杂度低，算法执行时间短。满足需求的同时尽可能使用低的存储量消耗
4.时间复杂度： 算法中基本操作重复执行的次数是问题规模 n 的某个函数 f(n)，即 T(n) = O(f(n)) 5.</description>
    </item>
    
  </channel>
</rss>
