<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>ES6 on KiWaTo</title>
    <link>https://kangzhiqing.com/tags/es6/</link>
    <description>Recent content in ES6 on KiWaTo</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 04 Jan 2019 11:03:38 +0800</lastBuildDate><atom:link href="https://kangzhiqing.com/tags/es6/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>ES6</title>
      <link>https://kangzhiqing.com/post/es6/</link>
      <pubDate>Fri, 04 Jan 2019 11:03:38 +0800</pubDate>
      
      <guid>https://kangzhiqing.com/post/es6/</guid>
      <description>let 和 const ES6 新加了两种声明变量的方式，一个是 let，一个是 const。
 let 和 const 声明变量有自己的块级作用域（在 for 循环中用 let 声明的变量不会泄露到外部） let 和 const 声明变量在预编译的过程都不会进行变量提升 let 和 const 声明的变量不能再次声明，而 const 声明变量的时候必须同时赋值，并且不能再次赋值  { console.log(a); // ReferenceError:a is not undefined  let a; } { let a = 1; let a = 2; // SyntaxError: Identifier &amp;#39;a&amp;#39; has already been declared } { const a; // SyntaxError:Missing initializer in const declaration } { const a = 1; a = 2 // TypeError:Assignment to constant variable } 模板字面量  创建字符串不必再拼接了~  let a = { str: &amp;#34;模板字面量&amp;#34; }; console.</description>
    </item>
    
  </channel>
</rss>
